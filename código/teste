const int rpwm = 2;        // Pino PWM para a direção do motor (direita)
const int lpwm = 3;        // Pino PWM para a direção do motor (esquerda)
const int fcpedal = 4;     // Primeiro fim de curso (sensor inicial)
const int fcpedal2 = 5;    // Segundo fim de curso (sensor intermediário)
const int fcpedal3 = 6;    // Terceiro fim de curso (sensor final)
const int motorDC = 7;     // Pino de controle do motor DC (acende/desliga motor)

void setup() {
  Serial.begin(9600);
  
  // Configuração dos pinos
  pinMode(fcpedal, INPUT);
  pinMode(fcpedal2, INPUT);
  pinMode(fcpedal3, INPUT);
  pinMode(rpwm, OUTPUT);
  pinMode(lpwm, OUTPUT);
  pinMode(motorDC, OUTPUT);

  // Inicializa o motor e os pinos PWM
  digitalWrite(rpwm, 0);
  digitalWrite(lpwm, 0);
  digitalWrite(motorDC, 0);
}

void loop() {
  
  // Se o pedal (fcpedal) estiver pressionado (LOW), inicia o movimento para a direita
  if (digitalRead(fcpedal) == LOW) {
    Serial.println("Iniciando movimento para a direita...");
    analogWrite(rpwm, 255);   // Ativa o motor para girar para a direita
    analogWrite(lpwm, 0);     // Desativa o motor para a esquerda
    analogWrite(motorDC, 255); // Liga o motor
    
    // Aguarda até que o motor bata no primeiro fim de curso
    while (digitalRead(fcpedal2) == HIGH && digitalRead(fcpedal3) == HIGH) {
      // O motor vai continuar girando para a direita
      delay(50); // Pequeno delay para evitar leituras excessivas
    }

    // Se bater no primeiro fim de curso (fcpedal2), gira para a esquerda
    if (digitalRead(fcpedal2) == LOW) {
      Serial.println("Bateu no primeiro fim de curso. Girando para a esquerda...");
      analogWrite(rpwm, 0);   // Desativa o motor para a direita
      analogWrite(lpwm, 255);  // Ativa o motor para a esquerda
      delay(300); // Tempo para parar e inverter direção
    }
    
    // Se bater no segundo fim de curso (fcpedal3), gira novamente para a direita
    if (digitalRead(fcpedal3) == LOW) {
      Serial.println("Bateu no segundo fim de curso. Girando para a direita...");
      analogWrite(lpwm, 0);   // Desativa o motor para a esquerda
      analogWrite(rpwm, 255);  // Ativa o motor para a direita
      delay(300); // Tempo para parar e inverter direção
    }
    
  } 
  // Quando o pedal for solto (fcpedal em HIGH), desliga o motor
  else {
    Serial.println("Fim de curso solto!");
    analogWrite(rpwm, 0);  // Desativa o motor para a direita
    analogWrite(lpwm, 0);   // Desativa o motor para a esquerda
    analogWrite(motorDC, 0); // Desliga o motor
  }

  delay(50); // Delay para evitar leituras excessivas
}
